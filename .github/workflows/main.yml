# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  # pull_request:
  #   branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  NODE_VERSION: 17.0.1
  ANCHOR_VERSION: 0.22.0
  SOLANA_VERSION_STABLE: 1.9.22
  RUST_TOOLCHAIN: stable
  PROGRAM_NAME: newworld
  ACCOUNT_ID: 813125037859
  REGION: us-east-1
  ROLE: uploadToS3Role
  BUCKET: programbuildsinfrastack-verifiablebuildbinariesb-1umx6gqtqe6gl

defaults:
  run:
    working-directory: ./newworld/program

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  main-worklfow:
    name: Main workflow
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      # - uses: ./.github/actions/install-linux-build-deps
      # - uses: ./.github/actions/install-solana
      #   with:
      #     solana_version: ${{ env.SOLANA_VERSION_STABLE }}
      # - uses: ./.github/actions/install-rust
      #   with:
      #     toolchain: ${{ env.RUST_TOOLCHAIN }}

      # - name: Build and upload
      #   uses: ./.github/actions/build-and-upload/
      #   id: upload-binary-metadata
      #   with:
      #     program-binary: newworld.so
      #     account-id: ${{ env.ACCOUNT_ID }}
      #     region: ${{ env.REGION }}
      #     role: ${{ env.ROLE }}
      #     bucket: ${{ env.BUCKET }}
      #     prefix: newworld

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Fetch version command for PR
        uses: ./.github/actions/fetch-pr-version
        id: fetch-pr-version
        with:
          owner: context.repo.owner
          repo: context.repo.repo
          # static for testing
          pull_number: 8

      - name: Upgrade program version
        if: ${{ steps.fetch-pr-version.outputs.version != 'none' }}
        id: upgrade-program-version
        run: |
          git config user.name 'upgrador-bot'
          git config user.email 'upgrador-bot@users.noreply.github.com'
          git log
          npm version ${{ steps.fetch-pr-version.outputs.version }}
          git log
        shell: bash
