# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

env:
  NODE_VERSION: 17.0.1
  ANCHOR_VERSION: 0.22.0
  SOLANA_VERSION_STABLE: 1.9.22
  RUST_TOOLCHAIN: stable
  PROGRAM_NAME: newworld

defaults:
  run:
    working-directory: ./newworld/program

jobs:
  # changes:
  #   runs-on: ubuntu-latest
  #   # Set job outputs to values from filter step
  #   outputs:
  #     package: ${{ steps.filter.outputs.package }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     # For pull requests it's not necessary to checkout the code
  #     - uses: dorny/paths-filter@v2
  #       id: filter
  #       with:
  #         filters: |
  #           package:
  #             - 'newworld/**'

  dump-context:
    # needs: changes
    runs-on: ubuntu-latest
    env:
      cache_id: program-newworld

    steps:
      - uses: actions/checkout@v2
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  # upgrade-version-and-publish-binary:
  #   # needs: changes
  #   # `push` event == someone pushed directly to main or merged a PR
  #   # if: ${{ (needs.changes.outputs.core == 'true' || needs.changes.outputs.package == 'true') && github.event_name == 'push' }}
  #   runs-on: ubuntu-latest
  #   env:
  #     cache_id: program-newworld

  #   # todo: does this work?
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/install-linux-build-deps
  #     - uses: ./.github/actions/install-solana
  #       with:
  #         solana_version: ${{ env.SOLANA_VERSION_STABLE }}
  #     - uses: ./.github/actions/install-rust
  #       with:
  #         toolchain: ${{ env.RUST_TOOLCHAIN }}

  #     - name: Publish updated artifacts to Crates and Github
  #       uses: ./.github/actions/publish-to-crates
  #       id: publish-to-crates
  #       with:
  #         cargo-token: ${{ secrets.CARGO_TOKEN }}
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         package-name: newworld
  #         path-to-cargo: ./newworld/program/Cargo.toml
  #         commit-sha: ${{ github.sha }}
  #         branch: ${{ github.ref }}

  #     - uses: ./.github/actions/setup-aws-env/
  #     - name: Build and upload
  #       uses: ./.github/actions/build-and-upload/
  #       id: upload-binary-metadata
  #       with:
  #         program-binary: jshiohaha_newworld_test.so
  #         account-id: ${{ env.BINARY_STORAGE_ACCOUNT_ID }}
  #         region: ${{ env.BINARY_STORAGE_REGION }}
  #         role: ${{ env.BINARY_STORAGE_ROLE }}
  #         bucket: ${{ env.BINARY_STORAGE_BUCKET }}
  #         prefix: newworld

  upgrade-version-and-publish-binary:
    # needs: changes
    # if: ${{ (needs.changes.outputs.core == 'true' || needs.changes.outputs.package == 'true') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    env:
      cache_id: program-auction-house

    steps:
      - uses: actions/checkout@v2
      - name: Publish updated artifacts to NPM and Github
        uses: ./.github/actions/publish-to-npm
        id: publish-to-npm
        with:
          npm-token: ${{ secrets.NPM_PUBLISH_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-package-dir: ./newworld/js
          commit-sha: "a4f8f7efcdb5c64b4e9642fa2cfa7346c3918752" # ${{ github.sha }}
          branch: ${{ github.ref }}
